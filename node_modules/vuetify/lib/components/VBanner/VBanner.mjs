import { createVNode as _createVNode } from "vue";
// Styles
import "./VBanner.sass"; // Composables

import { makeBorderProps, useBorder } from "../../composables/border.mjs";
import { makeDimensionProps, useDimension } from "../../composables/dimensions.mjs";
import { makeElevationProps, useElevation } from "../../composables/elevation.mjs";
import { makePositionProps, usePosition } from "../../composables/position.mjs";
import { makeRoundedProps, useRounded } from "../../composables/rounded.mjs";
import { makeTagProps } from "../../composables/tag.mjs";
import { makeThemeProps, useTheme } from "../../composables/theme.mjs"; // Utilities

import { defineComponent } from 'vue';
import { makeProps } from "../../util/index.mjs";
export default defineComponent({
  name: 'VBanner',
  props: makeProps({
    avatar: String,
    icon: String,
    mobile: Boolean,
    singleLine: Boolean,
    sticky: Boolean,
    ...makeBorderProps(),
    ...makeDimensionProps(),
    ...makeElevationProps(),
    ...makePositionProps(),
    ...makeRoundedProps(),
    ...makeTagProps(),
    ...makeThemeProps()
  }),

  setup(props, {
    slots
  }) {
    const {
      themeClasses
    } = useTheme(props);
    const {
      borderClasses
    } = useBorder(props, 'v-banner');
    const {
      dimensionStyles
    } = useDimension(props);
    const {
      elevationClasses
    } = useElevation(props);
    const {
      positionClasses,
      positionStyles
    } = usePosition(props, 'v-banner');
    const {
      roundedClasses
    } = useRounded(props, 'v-banner');
    return () => {
      var _slots$thumbnail, _slots$default, _slots$actions;

      const hasThumbnail = !!props.avatar || !!props.icon || !!slots.thumbnail;
      return _createVNode(props.tag, {
        "class": ['v-banner', {
          'v-banner--has-thumbnail': hasThumbnail,
          'v-banner--is-mobile': props.mobile,
          'v-banner--single-line': props.singleLine,
          'v-banner--sticky': props.sticky
        }, themeClasses.value, borderClasses.value, roundedClasses.value, elevationClasses.value, positionClasses.value],
        "style": [dimensionStyles.value, positionStyles.value],
        "role": "banner"
      }, {
        default: () => [_createVNode("div", {
          "class": "v-banner__sizer"
        }, [_createVNode("div", {
          "class": "v-banner__content"
        }, [hasThumbnail && _createVNode("div", {
          "class": "v-banner__thumbnail"
        }, [(_slots$thumbnail = slots.thumbnail) == null ? void 0 : _slots$thumbnail.call(slots), props.avatar && _createVNode("img", {
          "class": "v-banner__avatar",
          "src": props.avatar,
          "alt": ""
        }, null, 8, ["src"]), props.icon && _createVNode("i", {
          "class": "v-banner__icon"
        }, [props.icon])]), _createVNode("div", {
          "class": "v-banner__text"
        }, [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots)])]), slots.actions && _createVNode("div", {
          "class": "v-banner__actions"
        }, [(_slots$actions = slots.actions) == null ? void 0 : _slots$actions.call(slots)])])]
      }, 8, ["class", "style"]);
    };
  }

});
//# sourceMappingURL=VBanner.mjs.map