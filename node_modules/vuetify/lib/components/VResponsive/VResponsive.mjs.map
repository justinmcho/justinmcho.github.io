{"version":3,"sources":["../../../src/components/VResponsive/VResponsive.tsx"],"names":["makeDimensionProps","useDimension","computed","defineComponent","makeProps","useAspectStyles","props","aspectStyles","ratio","Number","aspectRatio","paddingBottom","String","undefined","name","contentClass","setup","slots","dimensionStyles","value","additional","default"],"mappings":";AAAA;AACA,4B,CAEA;;SACSA,kB,EAAoBC,Y,4CAE7B;;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,KAA1C;SACSC,S;AAET,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAoE;AACzE,SAAO;AACLC,IAAAA,YAAY,EAAEL,QAAQ,CAAC,MAAM;AAC3B,YAAMM,KAAK,GAAGC,MAAM,CAACH,KAAK,CAACI,WAAP,CAApB;AAEA,aAAOF,KAAK,GACR;AAAEG,QAAAA,aAAa,EAAEC,MAAM,CAAC,IAAIJ,KAAJ,GAAY,GAAb,CAAN,GAA0B;AAA3C,OADQ,GAERK,SAFJ;AAGD,KANqB;AADjB,GAAP;AASD;AAED,eAAeV,eAAe,CAAC;AAC7BW,EAAAA,IAAI,EAAE,aADuB;AAG7BR,EAAAA,KAAK,EAAEF,SAAS,CAAC;AACfM,IAAAA,WAAW,EAAE,CAACE,MAAD,EAASH,MAAT,CADE;AAEfM,IAAAA,YAAY,EAAEH,MAFC;AAGf,OAAGZ,kBAAkB;AAHN,GAAD,CAHa;;AAS7BgB,EAAAA,KAAK,CAAEV,KAAF,EAAS;AAAEW,IAAAA;AAAF,GAAT,EAAoB;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAsBjB,YAAY,CAACK,KAAD,CAAxC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAmBF,eAAe,CAACC,KAAD,CAAxC;AAEA,WAAO;AAAA;;AAAA;AAAA,iBACM,cADN;AAAA,iBAC6BY,eAAe,CAACC;AAD7C;AAAA,iBAEQ,qBAFR;AAAA,iBAEsCZ,YAAY,CAACY;AAFnD,wCAGDF,KAAK,CAACG,UAHL,qBAGD,uBAAAH,KAAK,CAHJ,EAIDA,KAAK,CAACI,OAAN;AAAA,iBACY,CAAC,uBAAD,EAA0Bf,KAAK,CAACS,YAAhC;AADZ,UAC6DE,KAAK,CAACI,OAAN,EAD7D,KAJC;AAAA,KAAP;AASD;;AAtB4B,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VResponsive.sass'\n\n// Composables\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\n\n// Utilities\nimport { computed, defineComponent } from 'vue'\nimport { makeProps } from '@/util'\n\nexport function useAspectStyles (props: { aspectRatio?: string | number }) {\n  return {\n    aspectStyles: computed(() => {\n      const ratio = Number(props.aspectRatio)\n\n      return ratio\n        ? { paddingBottom: String(1 / ratio * 100) + '%' }\n        : undefined\n    }),\n  }\n}\n\nexport default defineComponent({\n  name: 'VResponsive',\n\n  props: makeProps({\n    aspectRatio: [String, Number],\n    contentClass: String,\n    ...makeDimensionProps(),\n  }),\n\n  setup (props, { slots }) {\n    const { dimensionStyles } = useDimension(props)\n    const { aspectStyles } = useAspectStyles(props)\n\n    return () => (\n      <div class=\"v-responsive\" style={ dimensionStyles.value }>\n        <div class=\"v-responsive__sizer\" style={ aspectStyles.value } />\n        { slots.additional?.() }\n        { slots.default && (\n          <div class={['v-responsive__content', props.contentClass]}>{ slots.default() }</div>\n        )}\n      </div>\n    )\n  },\n})\n"],"file":"VResponsive.mjs"}