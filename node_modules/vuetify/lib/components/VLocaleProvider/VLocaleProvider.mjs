import { createVNode as _createVNode } from "vue";
import { defineComponent } from 'vue';
import { provideLocale } from "../../composables/locale.mjs";
import { provideRtl } from "../../composables/rtl.mjs";
import { makeProps } from "../../util/index.mjs";
export default defineComponent({
  name: 'VLocaleProvider',
  props: makeProps({
    locale: String,
    fallbackLocale: String,
    messages: Object,
    rtl: {
      type: Boolean,
      default: undefined
    }
  }),

  setup(props, ctx) {
    const localeInstance = provideLocale(props);
    const {
      rtlClasses
    } = provideRtl(props, localeInstance);
    return () => {
      var _ctx$slots$default, _ctx$slots;

      return _createVNode("div", {
        "class": rtlClasses.value
      }, [(_ctx$slots$default = (_ctx$slots = ctx.slots).default) == null ? void 0 : _ctx$slots$default.call(_ctx$slots)], 2);
    };
  }

});
//# sourceMappingURL=VLocaleProvider.mjs.map