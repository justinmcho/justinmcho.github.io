{"version":3,"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbs.ts"],"names":["VBreadcrumbsItem","VBreadcrumbsDivider","Themeable","mixins","extend","name","props","divider","type","String","default","items","Array","large","Boolean","computed","classes","themeClasses","methods","genDivider","$createElement","$slots","genItems","hasSlot","$scopedSlots","item","keys","i","length","push","text","key","join","render","h","children","staticClass","class"],"mappings":"AAAA;;AACA;AAEA;AACA,6B,CAEA;;AAIA;OACOA,gB;OACAC,mB,mCAEP;;OACOC,S,0CAEP;;OACOC,M;AAEP,eAAeA,MAAM,CACnBD;AACA;AAFmB,CAAN,CAGbE,MAHa,CAGN;AACPC,EAAAA,IAAI,EAAE,eADC;AAGPC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEC,MADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KADJ;AAKLC,IAAAA,KAAK,EAAE;AACLH,MAAAA,IAAI,EAAEI,KADD;AAELF,MAAAA,OAAO,EAAE,MAAO;AAFX,KALF;AASLG,IAAAA,KAAK,EAAEC;AATF,GAHA;AAePC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,GAAY;AACjB,aAAO;AACL,gCAAwB,KAAKH,KADxB;AAEL,WAAG,KAAKI;AAFH,OAAP;AAID;;AANO,GAfH;AAwBPC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,GAAI;AACZ,aAAO,KAAKC,cAAL,CAAoBnB,mBAApB,EAAyC,KAAKoB,MAAL,CAAYd,OAAZ,GAAsB,KAAKc,MAAL,CAAYd,OAAlC,GAA4C,KAAKA,OAA1F,CAAP;AACD,KAHM;;AAIPe,IAAAA,QAAQ,GAAI;AACV,YAAMX,KAAK,GAAG,EAAd;AACA,YAAMY,OAAO,GAAG,CAAC,CAAC,KAAKC,YAAL,CAAkBC,IAApC;AACA,YAAMC,IAAI,GAAG,EAAb;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhB,KAAL,CAAWiB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,cAAMF,IAAI,GAAG,KAAKd,KAAL,CAAWgB,CAAX,CAAb;AAEAD,QAAAA,IAAI,CAACG,IAAL,CAAUJ,IAAI,CAACK,IAAf;AAEA,YAAIP,OAAJ,EAAaZ,KAAK,CAACkB,IAAN,CAAW,KAAKL,YAAL,CAAkBC,IAAlB,CAAwB;AAAEA,UAAAA;AAAF,SAAxB,CAAX,EAAb,KACKd,KAAK,CAACkB,IAAN,CAAW,KAAKT,cAAL,CAAoBpB,gBAApB,EAAsC;AAAE+B,UAAAA,GAAG,EAAEL,IAAI,CAACM,IAAL,CAAU,GAAV,CAAP;AAAuB1B,UAAAA,KAAK,EAAEmB;AAA9B,SAAtC,EAA4E,CAACA,IAAI,CAACK,IAAN,CAA5E,CAAX;AAEL,YAAIH,CAAC,GAAG,KAAKhB,KAAL,CAAWiB,MAAX,GAAoB,CAA5B,EAA+BjB,KAAK,CAACkB,IAAN,CAAW,KAAKV,UAAL,EAAX;AAChC;;AAED,aAAOR,KAAP;AACD;;AArBM,GAxBF;;AAgDPsB,EAAAA,MAAM,CAAEC,CAAF,EAAY;AAChB,UAAMC,QAAQ,GAAG,KAAKd,MAAL,CAAYX,OAAZ,IAAuB,KAAKY,QAAL,EAAxC;AAEA,WAAOY,CAAC,CAAC,IAAD,EAAO;AACbE,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,KAAK,EAAE,KAAKrB;AAFC,KAAP,EAGLmB,QAHK,CAAR;AAID;;AAvDM,CAHM,CAAf","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Styles\nimport './VBreadcrumbs.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport VBreadcrumbsItem from './VBreadcrumbsItem'\nimport VBreadcrumbsDivider from './VBreadcrumbsDivider'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-breadcrumbs',\n\n  props: {\n    divider: {\n      type: String,\n      default: '/',\n    },\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    large: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-breadcrumbs--large': this.large,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genDivider () {\n      return this.$createElement(VBreadcrumbsDivider, this.$slots.divider ? this.$slots.divider : this.divider)\n    },\n    genItems () {\n      const items = []\n      const hasSlot = !!this.$scopedSlots.item\n      const keys = []\n\n      for (let i = 0; i < this.items.length; i++) {\n        const item = this.items[i]\n\n        keys.push(item.text)\n\n        if (hasSlot) items.push(this.$scopedSlots.item!({ item }))\n        else items.push(this.$createElement(VBreadcrumbsItem, { key: keys.join('.'), props: item }, [item.text]))\n\n        if (i < this.items.length - 1) items.push(this.genDivider())\n      }\n\n      return items\n    },\n  },\n\n  render (h): VNode {\n    const children = this.$slots.default || this.genItems()\n\n    return h('ul', {\n      staticClass: 'v-breadcrumbs',\n      class: this.classes,\n    }, children)\n  },\n})\n"],"file":"VBreadcrumbs.mjs"}