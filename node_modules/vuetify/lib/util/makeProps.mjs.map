{"version":3,"sources":["../../src/util/makeProps.ts"],"names":["useDefaults","getCurrentInstance","wrapInArray","consoleWarn","makeProps","props","key","originalProp","isOptions","Array","isArray","propDefinition","type","originalDefault","hasOwnProperty","default","Boolean","includes","undefined","wrappedDefault","generateDefault","propName","localDefault","vm","name","defaults","globalDefault","value","global","componentDefault","actualDefault","isFactory","val","Function"],"mappings":"AAAA;SACSA,W,uCAET;;AACA,SAASC,kBAAT,QAAmC,KAAnC;SACSC,W;SACAC,W,yBAET;;AAGA,OAAO,SAASC,SAAT,CAA+EC,KAA/E,EAAyF;AAC9F,OAAK,MAAMC,GAAX,IAAkBD,KAAlB,EAAyB;AACvB,UAAME,YAAY,GAAGF,KAAK,CAACC,GAAD,CAA1B;AACA,UAAME,SAAS,GAAG,EAAED,YAAY,IAAI,IAAhB,IAAwBE,KAAK,CAACC,OAAN,CAAcH,YAAd,CAAxB,IAAuD,OAAOA,YAAP,KAAwB,UAAjF,CAAlB;AAEA,UAAMI,cAAc,GAAIH,SAAS,GAAGD,YAAH,GAAkB;AAAEK,MAAAA,IAAI,EAAEL;AAAR,KAAnD;AACA,UAAMM,eAAe,GAAGF,cAAc,CAACG,cAAf,CAA8B,SAA9B,IACpBH,cAAc,CAACI,OADK,GAEpBJ,cAAc,CAACC,IAAf,KAAwBI,OAAxB,IAAoCP,KAAK,CAACC,OAAN,CAAcC,cAAc,CAACC,IAA7B,KAAsCD,cAAc,CAACC,IAAf,CAAoBK,QAApB,CAA6BD,OAA7B,CAA1E,GACE,KADF,GAEEE,SAJN;AAMA,UAAMC,cAAc,GAAGC,eAAe,CAACd,GAAD,EAAMO,eAAN,EAAuBF,cAAc,CAACC,IAAtC,CAAtC;AAEAP,IAAAA,KAAK,CAACC,GAAD,CAAL,GAAa,EACX,GAAGK,cADQ;AAEXI,MAAAA,OAAO,EAAEI;AAFE,KAAb;AAID;;AAED,SAAOd,KAAP;AACD;;AAED,SAASe,eAAT,CAA0BC,QAA1B,EAA4CC,YAA5C,EAA+DV,IAA/D,EAA0E;AACxE,SAAQP,KAAD,IAAoC;AAAA;;AACzC,UAAMkB,EAAE,GAAGtB,kBAAkB,EAA7B;;AAEA,QAAI,CAACsB,EAAL,EAAS;AACPpB,MAAAA,WAAW,CAAC,6EAAD,CAAX;AAEA,aAAOmB,YAAP;AACD;;AAED,QAAI,CAACC,EAAE,CAACX,IAAH,CAAQY,IAAb,EAAmB;AACjBrB,MAAAA,WAAW,CAAC,kFAAD,CAAX;AAEA,aAAOmB,YAAP;AACD;;AAED,UAAMG,QAAQ,GAAGzB,WAAW,EAA5B;AACA,UAAM0B,aAAa,4BAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAlB,qBAAG,sBAAwBP,QAAxB,CAAtB;AACA,UAAMQ,gBAAgB,4BAAGJ,QAAQ,CAACE,KAAT,CAAeJ,EAAE,CAACX,IAAH,CAAQY,IAAvB,CAAH,qBAAG,sBAA+BH,QAA/B,CAAzB;AACA,UAAMS,aAAa,GAAG,OAAOD,gBAAP,KAA4B,WAA5B,GAClBA,gBADkB,GAElB,OAAOH,aAAP,KAAyB,WAAzB,GACEA,aADF,GAEEJ,YAJN;AAMA,WAAOS,SAAS,CAACD,aAAD,EAAgBlB,IAAhB,CAAT,GAAiCkB,aAAa,CAACzB,KAAD,CAA9C,GAAwDyB,aAA/D;AACD,GAzBD;AA0BD,C,CAED;;;AACA,SAASC,SAAT,CAAoBC,GAApB,EAA8BpB,IAA9B,EAAyC;AACvC,SAAO,OAAOoB,GAAP,KAAe,UAAf,IAA6B,CAAC9B,WAAW,CAACU,IAAD,CAAX,CAAkBK,QAAlB,CAA2BgB,QAA3B,CAArC;AACD","sourcesContent":["// Composables\nimport { useDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { getCurrentInstance } from 'vue'\nimport { wrapInArray } from './helpers'\nimport { consoleWarn } from './console'\n\n// Types\nimport type { Prop } from 'vue'\n\nexport function makeProps<P extends Record<string, Prop<any> & { source?: string }>> (props: P) {\n  for (const key in props) {\n    const originalProp = props[key]\n    const isOptions = !(originalProp == null || Array.isArray(originalProp) || typeof originalProp === 'function')\n\n    const propDefinition = (isOptions ? originalProp : { type: originalProp }) as any\n    const originalDefault = propDefinition.hasOwnProperty('default')\n      ? propDefinition.default\n      : propDefinition.type === Boolean || (Array.isArray(propDefinition.type) && propDefinition.type.includes(Boolean))\n        ? false\n        : undefined\n\n    const wrappedDefault = generateDefault(key, originalDefault, propDefinition.type)\n\n    props[key] = {\n      ...propDefinition,\n      default: wrappedDefault,\n    }\n  }\n\n  return props\n}\n\nfunction generateDefault (propName: string, localDefault: any, type: any) {\n  return (props: Record<string, unknown>) => {\n    const vm = getCurrentInstance()\n\n    if (!vm) {\n      consoleWarn('Unable to get current component instance when generating default prop value')\n\n      return localDefault\n    }\n\n    if (!vm.type.name) {\n      consoleWarn('The component is missing an explicit name, unable to generate default prop value')\n\n      return localDefault\n    }\n\n    const defaults = useDefaults()\n    const globalDefault = defaults.value.global?.[propName]\n    const componentDefault = defaults.value[vm.type.name]?.[propName]\n    const actualDefault = typeof componentDefault !== 'undefined'\n      ? componentDefault\n      : typeof globalDefault !== 'undefined'\n        ? globalDefault\n        : localDefault\n\n    return isFactory(actualDefault, type) ? actualDefault(props) : actualDefault\n  }\n}\n\n// Would be nice to have PropOptions here\nfunction isFactory (val: any, type: any) {\n  return typeof val === 'function' && !wrapInArray(type).includes(Function)\n}\n"],"file":"makeProps.mjs"}