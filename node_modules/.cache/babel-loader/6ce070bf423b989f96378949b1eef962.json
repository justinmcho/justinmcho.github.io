{"remainingRequest":"/Users/justincho/Documents/dev/justinmcho.github.io/personal-website/node_modules/babel-loader/lib/index.js!/Users/justincho/Documents/dev/justinmcho.github.io/personal-website/node_modules/vuetify/lib/composables/icons.mjs","dependencies":[{"path":"/Users/justincho/Documents/dev/justinmcho.github.io/personal-website/node_modules/vuetify/lib/composables/icons.mjs","mtime":499162500000},{"path":"/Users/justincho/Documents/dev/justinmcho.github.io/personal-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justincho/Documents/dev/justinmcho.github.io/personal-website/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCB7IG1lcmdlUHJvcHMgYXMgX21lcmdlUHJvcHMsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSB9IGZyb20gInZ1ZSI7IC8vIFV0aWxpdGllcwoKaW1wb3J0IHsgY29tcHV0ZWQsIGRlZmluZUNvbXBvbmVudCwgaW5qZWN0LCBpc1JlZiB9IGZyb20gJ3Z1ZSc7CmltcG9ydCB7IG1ha2VQcm9wcyB9IGZyb20gIi4uL3V0aWwvbWFrZVByb3BzLm1qcyI7CmltcG9ydCB7IHByb3BzRmFjdG9yeSB9IGZyb20gIi4uL3V0aWwvcHJvcHNGYWN0b3J5Lm1qcyI7IC8vIFR5cGVzCgpleHBvcnQgdmFyIEljb25TeW1ib2wgPSBTeW1ib2wuZm9yKCd2dWV0aWZ5Omljb25zJyk7CmV4cG9ydCB2YXIgbWFrZUljb25Qcm9wcyA9IHByb3BzRmFjdG9yeSh7CiAgaWNvbjogewogICAgdHlwZTogW1N0cmluZywgT2JqZWN0XSwKICAgIHJlcXVpcmVkOiB0cnVlCiAgfSwKICAvLyBDb3VsZCBub3QgcmVtb3ZlIHRoaXMgYW5kIHVzZSBtYWtlVGFnUHJvcHMsIHR5cGVzIGNvbXBsYWluZWQgYmVjYXVzZSBpdCBpcyBub3QgcmVxdWlyZWQKICB0YWc6IHsKICAgIHR5cGU6IFN0cmluZywKICAgIHJlcXVpcmVkOiB0cnVlCiAgfQp9LCAnaWNvbicpOwpleHBvcnQgdmFyIFZDb21wb25lbnRJY29uID0gZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnVkNvbXBvbmVudEljb24nLAogIHByb3BzOiBtYWtlUHJvcHMobWFrZUljb25Qcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBfY3JlYXRlVk5vZGUocHJvcHMudGFnLCBudWxsLCB7CiAgICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgICByZXR1cm4gW19jcmVhdGVWTm9kZShwcm9wcy5pY29uLCBudWxsLCBudWxsKV07CiAgICAgICAgfQogICAgICB9KTsKICAgIH07CiAgfQp9KTsKZXhwb3J0IHZhciBWU3ZnSWNvbiA9IGRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ1ZTdmdJY29uJywKICBpbmhlcml0QXR0cnM6IGZhbHNlLAogIHByb3BzOiBtYWtlUHJvcHMobWFrZUljb25Qcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMsIF9yZWYpIHsKICAgIHZhciBhdHRycyA9IF9yZWYuYXR0cnM7CiAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX2NyZWF0ZVZOb2RlKHByb3BzLnRhZywgX21lcmdlUHJvcHMoYXR0cnMsIHsKICAgICAgICAic3R5bGUiOiBudWxsCiAgICAgIH0pLCB7CiAgICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgICByZXR1cm4gW19jcmVhdGVWTm9kZSgic3ZnIiwgewogICAgICAgICAgICAiY2xhc3MiOiAidi1pY29uX19zdmciLAogICAgICAgICAgICAieG1sbnMiOiAiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLAogICAgICAgICAgICAidmlld0JveCI6ICIwIDAgMjQgMjQiLAogICAgICAgICAgICAicm9sZSI6ICJpbWciLAogICAgICAgICAgICAiYXJpYS1oaWRkZW4iOiAidHJ1ZSIKICAgICAgICAgIH0sIFtfY3JlYXRlVk5vZGUoInBhdGgiLCB7CiAgICAgICAgICAgICJkIjogcHJvcHMuaWNvbgogICAgICAgICAgfSwgbnVsbCwgOCwgWyJkIl0pXSldOwogICAgICAgIH0KICAgICAgfSwgMTYpOwogICAgfTsKICB9Cn0pOwpleHBvcnQgdmFyIFZMaWdhdHVyZUljb24gPSBkZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdWTGlnYXR1cmVJY29uJywKICBwcm9wczogbWFrZVByb3BzKG1ha2VJY29uUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX2NyZWF0ZVZOb2RlKHByb3BzLnRhZywgbnVsbCwgewogICAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgICAgcmV0dXJuIFtwcm9wcy5pY29uXTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfTsKICB9Cn0pOwpleHBvcnQgdmFyIFZDbGFzc0ljb24gPSBkZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdWQ2xhc3NJY29uJywKICBwcm9wczogbWFrZVByb3BzKG1ha2VJY29uUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX2NyZWF0ZVZOb2RlKHByb3BzLnRhZywgewogICAgICAgICJjbGFzcyI6IHByb3BzLmljb24KICAgICAgfSwgbnVsbCwgOCwgWyJjbGFzcyJdKTsKICAgIH07CiAgfQp9KTsKZXhwb3J0IHZhciBkZWZhdWx0U2V0cyA9IHsKICBzdmc6IHsKICAgIGNvbXBvbmVudDogVlN2Z0ljb24KICB9LAogIGNsYXNzOiB7CiAgICBjb21wb25lbnQ6IFZDbGFzc0ljb24KICB9Cn07IC8vIENvbXBvc2FibGVzCgpleHBvcnQgdmFyIHVzZUljb24gPSBmdW5jdGlvbiB1c2VJY29uKHByb3BzKSB7CiAgdmFyIGljb25zID0gaW5qZWN0KEljb25TeW1ib2wpOwogIGlmICghaWNvbnMpIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBWdWV0aWZ5IEljb25zIHByb3ZpZGUhJyk7CiAgdmFyIGljb25EYXRhID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgdmFyIGljb25BbGlhcyA9IGlzUmVmKHByb3BzKSA/IHByb3BzLnZhbHVlIDogcHJvcHMuaWNvbjsKICAgIGlmICghaWNvbkFsaWFzKSB0aHJvdyBuZXcgRXJyb3IoJ0ljb24gdmFsdWUgaXMgdW5kZWZpbmVkIG9yIG51bGwnKTsKICAgIHZhciBpY29uID0gaWNvbkFsaWFzOwoKICAgIGlmICh0eXBlb2YgaWNvbkFsaWFzID09PSAnc3RyaW5nJyAmJiBpY29uQWxpYXMuaW5jbHVkZXMoJyQnKSkgewogICAgICB2YXIgX2ljb25zJGFsaWFzZXM7CgogICAgICBpY29uID0gKF9pY29ucyRhbGlhc2VzID0gaWNvbnMuYWxpYXNlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9pY29ucyRhbGlhc2VzW2ljb25BbGlhcy5zbGljZShpY29uQWxpYXMuaW5kZXhPZignJCcpICsgMSldOwogICAgfQoKICAgIGlmICghaWNvbikgdGhyb3cgbmV3IEVycm9yKCJDb3VsZCBub3QgZmluZCBhbGlhc2VkIGljb24gXCIiLmNvbmNhdChpY29uQWxpYXMsICJcIiIpKTsKCiAgICBpZiAodHlwZW9mIGljb24gIT09ICdzdHJpbmcnKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgY29tcG9uZW50OiBWQ29tcG9uZW50SWNvbiwKICAgICAgICBpY29uOiBpY29uCiAgICAgIH07CiAgICB9CgogICAgdmFyIGhhc1NldCA9IGljb24uaW5jbHVkZXMoJzonKTsKICAgIHZhciBzZXROYW1lID0gaGFzU2V0ID8gaWNvbi5zcGxpdCgnOicpWzBdIDogaWNvbnMuZGVmYXVsdFNldDsKICAgIHZhciBpY29uTmFtZSA9IGhhc1NldCA/IGljb24uc3BsaXQoJzonKVsxXSA6IGljb247CiAgICB2YXIgc2V0ID0gaWNvbnMuc2V0c1tzZXROYW1lICE9IG51bGwgPyBzZXROYW1lIDogaWNvbnMuZGVmYXVsdFNldF07CgogICAgaWYgKCFzZXQpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCJDb3VsZCBub3QgZmluZCBpY29uIHNldCBcIiIuY29uY2F0KHNldE5hbWUsICJcIiIpKTsKICAgIH0KCiAgICByZXR1cm4gewogICAgICBjb21wb25lbnQ6IHNldC5jb21wb25lbnQsCiAgICAgIGljb246IGljb25OYW1lCiAgICB9OwogIH0pOwogIHJldHVybiB7CiAgICBpY29uRGF0YTogaWNvbkRhdGEKICB9Owp9Ow=="},{"version":3,"sources":["../../src/composables/icons.tsx"],"names":["makeProps","propsFactory","IconSymbol","Symbol","makeIconProps","icon","type","required","tag","VComponentIcon","defineComponent","name","props","setup","VSvgIcon","inheritAttrs","attrs","VLigatureIcon","VClassIcon","defaultSets","svg","component","class","useIcon","icons","inject","iconData","computed","iconAlias","isRef","hasSet","setName","iconName","set"],"mappings":"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","sourcesContent":["// Utilities\nimport { computed, defineComponent, inject, isRef } from 'vue'\nimport { makeProps } from '@/util/makeProps'\nimport { propsFactory } from '@/util/propsFactory'\n\n// Types\nimport type { InjectionKey, JSXComponent, PropType, Ref } from 'vue'\n\nexport type IconValue = string | JSXComponent\n\nexport interface IconAliases {\n  [name: string]: IconValue\n  complete: IconValue\n  cancel: IconValue\n  close: IconValue\n  delete: IconValue\n  clear: IconValue\n  success: IconValue\n  info: IconValue\n  warning: IconValue\n  error: IconValue\n  prev: IconValue\n  next: IconValue\n  checkboxOn: IconValue\n  checkboxOff: IconValue\n  checkboxIndeterminate: IconValue\n  delimiter: IconValue\n  sort: IconValue\n  expand: IconValue\n  menu: IconValue\n  subgroup: IconValue\n  dropdown: IconValue\n  radioOn: IconValue\n  radioOff: IconValue\n  edit: IconValue\n  ratingEmpty: IconValue\n  ratingFull: IconValue\n  ratingHalf: IconValue\n  loading: IconValue\n  first: IconValue\n  last: IconValue\n  unfold: IconValue\n  file: IconValue\n  plus: IconValue\n  minus: IconValue\n}\n\nexport interface IconProps {\n  tag: string\n  icon: IconValue\n  disabled?: Boolean\n}\n\ntype IconComponent = JSXComponent<IconProps>\n\nexport interface IconSet {\n  component: IconComponent\n}\n\nexport type IconOptions = {\n  defaultSet: string\n  aliases?: Partial<IconAliases>\n  sets: Record<string, IconSet>\n}\n\ntype IconInstance = {\n  component: IconComponent\n  icon: IconValue\n}\n\nexport const IconSymbol: InjectionKey<IconOptions> = Symbol.for('vuetify:icons')\n\nexport const makeIconProps = propsFactory({\n  icon: {\n    type: [String, Object] as PropType<IconValue>,\n    required: true,\n  },\n  // Could not remove this and use makeTagProps, types complained because it is not required\n  tag: {\n    type: String,\n    required: true,\n  },\n}, 'icon')\n\nexport const VComponentIcon = defineComponent({\n  name: 'VComponentIcon',\n\n  props: makeProps(makeIconProps()),\n\n  setup (props) {\n    return () => {\n      return (\n        <props.tag>\n          <props.icon />\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport const VSvgIcon = defineComponent({\n  name: 'VSvgIcon',\n\n  inheritAttrs: false,\n\n  props: makeProps(makeIconProps()),\n\n  setup (props, { attrs }) {\n    return () => {\n      return (\n        <props.tag { ...attrs } style={ null }>\n          <svg\n            class=\"v-icon__svg\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            role=\"img\"\n            aria-hidden=\"true\"\n          >\n            <path d={ props.icon as string }></path>\n          </svg>\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport const VLigatureIcon = defineComponent({\n  name: 'VLigatureIcon',\n\n  props: makeProps(makeIconProps()),\n\n  setup (props) {\n    return () => {\n      return <props.tag>{ props.icon }</props.tag>\n    }\n  },\n})\n\nexport const VClassIcon = defineComponent({\n  name: 'VClassIcon',\n\n  props: makeProps(makeIconProps()),\n\n  setup (props) {\n    return () => {\n      return <props.tag class={ props.icon }></props.tag>\n    }\n  },\n})\n\nexport const defaultSets: Record<string, IconSet> = {\n  svg: {\n    component: VSvgIcon,\n  },\n  class: {\n    component: VClassIcon,\n  },\n}\n\n// Composables\nexport const useIcon = (props: Ref<string | undefined> | { icon?: IconValue }) => {\n  const icons = inject(IconSymbol)\n\n  if (!icons) throw new Error('Missing Vuetify Icons provide!')\n\n  const iconData: Ref<IconInstance> = computed(() => {\n    const iconAlias = isRef(props) ? props.value : props.icon\n\n    if (!iconAlias) throw new Error('Icon value is undefined or null')\n\n    let icon: IconValue | undefined = iconAlias\n\n    if (typeof iconAlias === 'string' && iconAlias.includes('$')) {\n      icon = icons.aliases?.[iconAlias.slice(iconAlias.indexOf('$') + 1)]\n    }\n\n    if (!icon) throw new Error(`Could not find aliased icon \"${iconAlias}\"`)\n\n    if (typeof icon !== 'string') {\n      return {\n        component: VComponentIcon,\n        icon,\n      }\n    }\n\n    const hasSet = icon.includes(':')\n    const setName = hasSet ? icon.split(':')[0] : icons.defaultSet\n    const iconName = hasSet ? icon.split(':')[1] : icon\n    const set = icons.sets[setName ?? icons.defaultSet]\n\n    if (!set) {\n      throw new Error(`Could not find icon set \"${setName}\"`)\n    }\n\n    return {\n      component: set.component,\n      icon: iconName,\n    }\n  })\n\n  return { iconData }\n}\n"]}]}